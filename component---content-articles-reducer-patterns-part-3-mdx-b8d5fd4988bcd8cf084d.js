(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"N/el":function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return i}));var n=t("itl6"),s=(t("DaAx"),t("O7St")),c=t("mc/u"),b=t("ipew"),p={},o={_frontmatter:p},r=c.a;function i(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(s.b)(r,Object.assign({},o,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"/articles/reducer-patterns/part-1/"}),"Part 1: Introduction to ",Object(s.b)("code",Object.assign({parentName:"a"},{className:"language-text"}),"useReducer")," and basic reducer patterns")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"/articles/reducer-patterns/part-2/"}),"Part 2: Reducers with actions"))),Object(s.b)("p",null,"So far in parts 1 and 2 of this series, we’ve learned that:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"the primary job of a reducer is to produce a new state"),Object(s.b)("li",{parentName:"ul"},"dispatched actions can take any shape you want")),Object(s.b)("p",null,"In part 3, we’ll be looking at the most common pattern of reducers and actions\nthat you’ll come across in documentation and online examples, and model a state\nchart using a reducer."),Object(s.b)("h2",{id:"table-of-contents",style:{position:"relative"}},"Table of Contents",Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#table-of-contents","aria-label":"table of contents permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("div",{className:"toc"}),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object.assign({parentName:"p"},{href:"#typical-usereducer-pattern"}),"Typical ",Object(s.b)("code",Object.assign({parentName:"a"},{className:"language-text"}),"useReducer")," Pattern"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object.assign({parentName:"p"},{href:"#tightly-coupled-state-values"}),"Tightly Coupled State Values"))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object.assign({parentName:"p"},{href:"#nested-switch-statements"}),"Nested Switch Statements")),Object(s.b)("ul",{parentName:"li"},Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#initial-hook-state"}),"Initial Hook State")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#translate-a-state-chart-to-a-reducer-function"}),"Translate a State Chart to a Reducer Function")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"#putting-it-all-together"}),"Putting It All Together")))),Object(s.b)("li",{parentName:"ul"},Object(s.b)("p",{parentName:"li"},Object(s.b)("a",Object.assign({parentName:"p"},{href:"#takeaways"}),"Takeaways")))),Object(s.b)("undefined",null),Object(s.b)("h2",{id:"typical-usereducer-pattern",style:{position:"relative"}},"Typical ",Object(s.b)("code",Object.assign({parentName:"h2"},{className:"language-text"}),"useReducer")," Pattern",Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#typical-usereducer-pattern","aria-label":"typical usereducer pattern permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("p",null,"Most ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"React.useReducer")," examples you encounter dispatch actions that look\nsomething like ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"{ type, paylod }"),", with reducer functions that consists of a\nswitch statement that matches on ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"type")," and uses the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"payload")," to calculate the\nnext state."),Object(s.b)("p",null,"Remember the reducer signature is ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"(currentState, action) => nextState"),". A\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"switch")," statement based reducer looks like:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," count ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"+")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," initialValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Error"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"To trigger this reducer, there are two possible actions we can dispatch."),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"5")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"We can encapsulate these two possibilities with ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://redux.js.org/basics/actions#action-creators"}),"bound action\ncreators"),":"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"add")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"payload"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reset")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Action creators are optional—instead, you can just dispatch actions directly\nwhere needed. They do offer a much nicer interface for the hook user by hiding\nthe reducer’s implementation details."),Object(s.b)("p",null,"The complete ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," definition looks like:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," initialValue ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," count ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"+")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," initialValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Error"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," dispatch",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," initialValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"add")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"payload"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reset")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Our hook interface is now ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count"),", plus the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"add()")," and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reset()")," functions."),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-04-k4vge",title:"reducer with switch statement",mdxType:"CodeSandbox"}),Object(s.b)("h2",{id:"tightly-coupled-state-values",style:{position:"relative"}},"Tightly Coupled State Values",Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#tightly-coupled-state-values","aria-label":"tightly coupled state values permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("p",null,"Great, so far we’ve explored quite a few reducer and action patterns, but we\nhaven’t talked about ",Object(s.b)("em",{parentName:"p"},"why")," we use ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer"),". In fact, you can express the\nprevious example more clearly as a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," hook:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," initialValue ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," setCount",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"useState"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"initialValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"add")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"value"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"setCount"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"count ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"+")," value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reset")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"setCount"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"initialValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-041-1uptn",title:"useReducer simplified with useState",mdxType:"CodeSandbox"}),Object(s.b)("p",null,"The reason is because ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," optimizes the use case of managing a single\nstate value. This implies that ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer"),"’s sweet spot is when we have more\nthan a single state value that we need to keep track of."),Object(s.b)("p",null,"What if we want to add an undo function, so we can get back the previous counts?\nOne way is to keep track of the count history. Instead of just keeping track of\nthe latest count, our state now looks like:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," initialState ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"We update the reducer with the following changes:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Return the current state as-is if we add zero, since this action doesn’t\nchange the state."),Object(s.b)("li",{parentName:"ul"},"If we’re adding any other value, also add the current count to the history\nstack."),Object(s.b)("li",{parentName:"ul"},"Add a new case to handle the ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"undo")," action.")),Object(s.b)("div",{className:"gatsby-highlight has-highlighted-lines","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"if")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"===")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")," count ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"+")," payload",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"..."),"history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," initialState",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"    ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token string"}),'"undo"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"if")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),"length ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"===")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const")," lastCount ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"..."),"history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"pop"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")," lastCount",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")," history",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"slice"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"-"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"1"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Error"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Lastly we add another bounded action creator to handle ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"undo()"),":"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"undo")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"undo"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Putting it all together:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," initialState ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"payload ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"===")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," count ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"+")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," initialState",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"undo"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"if")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"length ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"===")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," lastCount ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"pop"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," lastCount",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," history",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"slice"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"-"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"throw")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token class-name"}),"Error"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," history ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," dispatch",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," initialState",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"add")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"payload"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"add"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reset")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"undo")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"undo"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"We see that ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"history")," are tightly coupled. When we add a value, we\nupdate ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," and add the previous count to the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"history")," stack. When we undo,\nwe replace ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"count")," by popping the last item from the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"history")," stack."),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-05-wtl5n",title:"tightly coupled state values",mdxType:"CodeSandbox"}),Object(s.b)("h2",{id:"nested-switch-statements",style:{position:"relative"}},"Nested Switch Statements",Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#nested-switch-statements","aria-label":"nested switch statements permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("p",null,"Did you know you can nest a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"switch")," statement inside the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"case")," clause of\nanother switch statement? Using this technique, you can perform very\nsophisticated actions with the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," hook, especially when coupled with\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect"),"."),Object(s.b)("p",null,"Let’s make a seemingly simple form with a single input and couple buttons:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"The input will only accept ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"[A-Za-z]")," characters"),Object(s.b)("li",{parentName:"ul"},"Submit button to POST the input value to an API"),Object(s.b)("li",{parentName:"ul"},"Reset button to reset the input value to the last successful submission")),Object(s.b)("p",null,"Easy peasy, right? That’s how forms always start out, except when you start\nconsidering:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"If input is invalid, display error message and don’t allow submission."),Object(s.b)("li",{parentName:"ul"},"Don’t allow submission if input value hasn’t changed from the previous\nsubmission."),Object(s.b)("li",{parentName:"ul"},"During submission, disable all inputs."),Object(s.b)("li",{parentName:"ul"},"Display submission status."),Object(s.b)("li",{parentName:"ul"},"When submission error occurs, the submit button remains active to allow for\nretry.")),Object(s.b)("p",null,"How would you satisfy all these requirements? Try to capture all the logic\nimperatively? Use one of the many React form libraries? I happen to think ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://statecharts.github.io"}),"state\ncharts")," are a great way to declaratively satisfy all the requirements."),Object(s.b)("p",null,Object(s.b)("img",Object.assign({parentName:"p"},{src:"/a9495bb96b5d8e4c5b499e04fce42b29/form-state-chart.svg",alt:"State chart describing form states and transitions"}))),Object(s.b)("p",null,"Our state chart has four states—editing, submitting, resolved, rejected—with\nclear transitions defined among the states, e.g. we transition from ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"editing")," to\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"submitting")," state by performing the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"submit")," action."),Object(s.b)("h3",{id:"initial-hook-state",style:{position:"relative"}},"Initial Hook State",Object(s.b)("a",Object.assign({parentName:"h3"},{href:"#initial-hook-state","aria-label":"initial hook state permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("p",null,"First let’s establish what our ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," hook state looks like. Note that the\nhook state is different than the state of a state chart. Our hook state looks\nlike:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," initialState ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"editing"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n\n  context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    previousValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'""'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'""'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    isValid",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"true"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    submitAllowed",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"false"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n    isSuccessful",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"undefined"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"The ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"value")," entry holds our state chart state. We also have a separate ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"context"),"\nentry that keeps track of the ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://en.wikipedia.org/wiki/UML_state_machine#Extended_states"}),"extended state"),"."),Object(s.b)("h3",{id:"translate-a-state-chart-to-a-reducer-function",style:{position:"relative"}},"Translate a State Chart to a Reducer Function",Object(s.b)("a",Object.assign({parentName:"h3"},{href:"#translate-a-state-chart-to-a-reducer-function","aria-label":"translate a state chart to a reducer function permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("div",{className:"gatsby-highlight has-highlighted-lines","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," context ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"  ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"value",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"    ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token string"}),'"editing"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"      ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")),"        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"change"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," isValid ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token regex"}),"/^[A-Za-z]*$/"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"test"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," submitAllowed ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," isValid ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"&&")," context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"previousValue ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"!==")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n            value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n            context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," payload",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," isValid",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," submitAllowed ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n            value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n            context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n              ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n              value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"previousValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n              isValid",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"true"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n              submitAllowed",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"false"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n            ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"        ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token string"}),'"submit"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"          ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"if")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"context",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),"submitAllowed",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{")," value",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token string"}),'"submitting"'),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," context ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"          ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"submitting"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"switch")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"resolve"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"resolved"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," context ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reject"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"rejected"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," context ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"resolved"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"editing"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          previousValue",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          isSuccessful",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"true"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          submitAllowed",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"false"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"case")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"rejected"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n        value",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"editing"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"..."),"context",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n          isSuccessful",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"false"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n        ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"default"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":"),"\n      ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Notice the top level ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"switch")," is based on the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"state.value")," (state chart state)\nexpression. For ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"editing")," and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"submitting")," states, we further switch on\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"action.type")," (state chart transition). Why do we do this? This guarantees that,\nfor example, the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"submit")," transition is only valid if our state chart is in the\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"editing")," state. Practically, this means that if the form is in the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"submitting"),"\nstate, it can’t be submitted again no matter how hard we try (we’ve just solved\nthe multiple button click issue, even if we forget to disable the submit\nbutton)."),Object(s.b)("p",null,"If you compare the code to the diagram, you’ll see that each ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"case")," clause\ncorresponds to a transition—seven transitions, seven ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"case")," clauses that return\nthe next state."),Object(s.b)("p",null,"Notice the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"default")," clauses always return the original state as-is. This is\ngenerally how state machines work—if you try to specify an illegal transition,\nthe state remains as-is."),Object(s.b)("p",null,"Looking at each ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"case")," clause, you’ll notice that we’re performing couple tasks:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Specify the next state by changing ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"state.value"),"."),Object(s.b)("li",{parentName:"ol"},"Changing ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"state.context")," as appropriate for a given transition.")),Object(s.b)("h3",{id:"putting-it-all-together",style:{position:"relative"}},"Putting It All Together",Object(s.b)("a",Object.assign({parentName:"h3"},{href:"#putting-it-all-together","aria-label":"putting it all together permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," dispatch",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," initialState",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," transitions ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"change"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"payload"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"change"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," payload ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"reset"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"reset"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"submit"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"dispatch"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{")," type",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"submit"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"To start transitions, we use the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"dispatch()")," function from the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer"),"\nhook. Transitions can be manually triggered (user clicking a button) via event\nhandlers, or automatically triggered (when state changes) via ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useEffect"),"."),Object(s.b)("p",null,"Complex state charts topics are beyond the scope of this article. What we’re\ndemonstrating here is that you can in fact model fairly complex systems (if\nsomewhat awkwardly) using reducers."),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-06-vsdno",title:"state chart using useReducer and useEffect",mdxType:"CodeSandbox"}),Object(s.b)("p",null,"If you’re curious about state charts, I highly recommend checking out\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://xstate.js.org/docs/"}),"XState"),"."),Object(s.b)("h2",{id:"takeaways",style:{position:"relative"}},"Takeaways",Object(s.b)("a",Object.assign({parentName:"h2"},{href:"#takeaways","aria-label":"takeaways permalink",className:"header-link after"}),Object(s.b)("svg",Object.assign({parentName:"a"},{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"}),Object(s.b)("path",Object.assign({parentName:"svg"},{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))))),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Use ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"React.useReducer")," when you need to keep track of multiple tightly-coupled\nstate values."),Object(s.b)("li",{parentName:"ul"},"Reducers are capable of modeling complex systems."),Object(s.b)("li",{parentName:"ul"},"Consider making your ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"useReducer")," hook more user friendly with action\ncreators.")),Object(s.b)("p",null,"As we’ve seen in this series of articles, ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," is a hook pattern capable\nof solving a wide variety of simple to moderately complicated problems. Now that\nthe scariest part of the pattern—reducers—is less scary, I hope you’ll reach for\nit more frequently, with creativity."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"/articles/reducer-patterns/part-1/"}),"Part 1: Introduction to ",Object(s.b)("code",Object.assign({parentName:"a"},{className:"language-text"}),"useReducer")," and basic reducer patterns")),Object(s.b)("li",{parentName:"ul"},Object(s.b)("a",Object.assign({parentName:"li"},{href:"/articles/reducer-patterns/part-2/"}),"Part 2: Reducers with actions"))))}i.isMDXComponent=!0},"mc/u":function(e,a,t){"use strict";var n=t("itl6"),s=t("iQNK"),c=t("7oih"),b=t("Al62"),p=function(e,a){var t=Object(b.d)(e),n="Published on "+t;if(a){var s=Object(b.d)(a);t=t+" (updated "+s+")",n=[n,"Updated on "+s].join(". ")}return[t,n]},o={color:"font.body.0",fontSize:"sm"};a.a=function(e){var a=e.children,t=Object(n.a)(e,["children"]),b=t.pageContext,r=b.frontmatter,i=r.title,m=r.published,j=r.updated,O=b.srcPath,N=p(m,j),l=N[0],u=N[1];return Object(s.c)(c.a,t,Object(s.c)("article",null,Object(s.c)("h1",{sx:{color:"font.articleH1"}},i),Object(s.c)("p",null,Object(s.c)("a",{href:"https://github.com/gsong/personal-site/commits/main"+O,sx:o,className:"link-hover","aria-label":u},l)),a))}}}]);
//# sourceMappingURL=component---content-articles-reducer-patterns-part-3-mdx-b8d5fd4988bcd8cf084d.js.map