(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{b3H6:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return o})),t.d(a,"default",(function(){return m}));var n=t("ILUq"),s=(t("DaAx"),t("1++Q")),c=t("mc/u"),b=t("ipew"),p=t("Qwro"),o={},r={_frontmatter:o},i=c.a;function m(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(s.b)(i,Object.assign({},r,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"I see a lot of people, especially those new to React hooks, shy away from\n",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://reactjs.org/docs/hooks-reference.html#usereducer"}),Object(s.b)("code",Object.assign({parentName:"a"},{className:"language-text"}),"useReducer"))," in favor of multiple ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState"),"s. I think some of it\nis the simplicity of the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," API, and some of it is assumed complexity\nvia association with ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://redux.js.org"}),"Redux"),". In practice, ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," has a lot more in\ncommon with ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," than Redux."),Object(s.b)("p",null,"The ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," API has two parts: the state and the state setter. When you want\nto update the state, you replace it using the state setter."),Object(s.b)("p",null,Object(s.b)("img",Object.assign({parentName:"p"},{src:"/0087a4b5d5c8f19be163d58df5bc3a97/setState-flow.svg",alt:"React.useState set state flow"}))),Object(s.b)("p",null,"The ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," API has three parts: the state, an action dispatcher, and a\nreducer to produce the new state."),Object(s.b)("p",null,Object(s.b)("img",Object.assign({parentName:"p"},{src:"/abafce4f393e1fe25f312651b7579657/dispatch-flow.svg",alt:"React.useReducer dispatch flow"}))),Object(s.b)("p",null,"When you want to update the state:"),Object(s.b)("ol",null,Object(s.b)("li",{parentName:"ol"},"Dispatch an action."),Object(s.b)("li",{parentName:"ol"},"The hook passes the current state and the action to the reducer function."),Object(s.b)("li",{parentName:"ol"},"The reducer computes a new state."),Object(s.b)("li",{parentName:"ol"},"The state is updated with the new state.")),Object(s.b)("p",null,Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," takes care of steps 2 and 4. You’re responsible for steps 1 and 3."),Object(s.b)("h1",null,"The Reducer Function"),Object(s.b)("p",null,"These are all valid signatures for reducer functions:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"currentState",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," dispachedAction"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"newState"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token parameter"}),"currentState"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"newState"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," newState"),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"As you can see, ",Object(s.b)("mark",null,"the primary job of a reducer is to produce a new\nstate"),", optionally taking into account the current state and the\ndispatched action."),Object(s.b)("h2",null,"Putting It All Together With useReducer"),Object(s.b)("p",null,Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://reactjs.org/docs/hooks-reference.html#usereducer"}),"The signature of ",Object(s.b)("code",Object.assign({parentName:"a"},{className:"language-text"}),"useReducer"))," is:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),"state",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," dispatch",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," initialState",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"You pass in a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer")," function (and optionally an ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"initialState"),") to\ninstantiate a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer")," hook. What you get back is a ",Object(s.b)("strong",{parentName:"p"},"read-only")," ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"state"),"\nand a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"dispatch")," function which you’ll use to trigger the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer"),"."),Object(s.b)("p",null,"This is one of the key differences when compared to ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState"),"—a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useReducer"),"\nhook computes the next state internally using a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer")," function, while a\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"useState")," hook relies entirely on external calculations for its next state."),Object(s.b)("p",null,"For the rest of the article, we’ll focus on different ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer")," (a.k.a. “new\nstate” calculator) implementation patterns."),Object(s.b)("h2",null,"Reducer Without Any Params"),Object(s.b)("p",null,Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"() => newState")),Object(s.b)("p",null,"The primary job of a reducer is to return a new state. In its simplest form, a\nreducer doesn’t even need to accept any parameters."),Object(s.b)("div",{className:"gatsby-highlight has-highlighted-lines","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token class-name"}),"Date"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),"date",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," update",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"new")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token class-name"}),"Date"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),"main",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),"div",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n      Now",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),":")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"date",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"toLocaleDateString"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"date",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"toLocaleTimeString"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"/"),"div",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"    ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"<"),"button onClick",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"update"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),">"),"Update",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"/"),"button",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),">")),"  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"/"),"main",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"The names ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"state"),", ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"dispatch"),", and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer")," are conceptual. In practice, you\ncan name them anything you like. In this example, they are ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"date")," (state),\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"update")," (dispatch), and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer"),"."),Object(s.b)("p",null,"Notice that we invoke ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"update()")," ",Object(s.b)("em",{parentName:"p"},"without")," passing in any parameters. The\ndispatch function signals the hook to run the reducer function, it’s up to you\nwhether you need to send an action with the signal or not. In this case, the\nhook actually runs ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer(currentState, undefined)"),"."),Object(s.b)("h3",null,"🤔 But Wait, the Reducer Doesn’t Accept Any Params"),Object(s.b)("p",null,"That’s right. In JavaScript, just because you pass parameters to a function,\ndoesn’t mean it needs to accept them."),Object(s.b)("div",{className:"gatsby-highlight","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function-variable function"}),"sayHi")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"hi"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"const")," result ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"sayHi"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"2"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"3"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token comment"}),'// result === "hi"')),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)(p.a,{repl:"reducer-pattern-00",header:"",title:"function params",style:{maxHeight:300},mdxType:"Repl"}),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-00-zuet6",header:"👩‍💻 Try the No-Params Reducer Example",title:"no-params reducer",style:{maxHeight:375},mdxType:"CodeSandbox"}),Object(s.b)("h2",null,"Reducer Using Current State"),Object(s.b)("p",null,Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"(currentState) => newState")),Object(s.b)("p",null,"This form of reducer is useful when you need the current state to calculate the\nnext state."),Object(s.b)("div",{className:"gatsby-highlight has-highlighted-lines","data-language":"js"},Object(s.b)("pre",Object.assign({parentName:"div"},{style:{counterReset:"linenumber NaN"},className:"language-js line-numbers"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-js"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function-variable function"}),"reducer")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token parameter"}),"count"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=>")," count ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"+")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"1"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token keyword"}),"const")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"["),"count",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," addOne",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=")," React",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"useReducer"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),"reducer",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),",")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"0"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),";")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"return")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),"main",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),"div",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"count",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"/"),"div",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"gatsby-highlight-code-line"}),"    ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"<"),"button onClick",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"=>")," ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"addOne"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),">"),"Add ",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token number"}),"1"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),"/"),"button",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token operator"}),">")),"  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"<"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"/"),"main",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),">"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")),Object(s.b)("span",Object.assign({parentName:"pre"},{"aria-hidden":"true",className:"line-numbers-rows",style:{whiteSpace:"normal",width:"auto",left:"0"}}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"}),Object(s.b)("span",{parentName:"span"})))),Object(s.b)("p",null,"Once again, the dispatch function, ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"addOne()"),", doesn’t need to pass an action to\n",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer"),"—the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"reducer")," is capable of computing the next state entirely based on\nthe current state."),Object(s.b)(b.a,{as:"h3",sandbox:"reducer-pattern-01-gmuic",title:"current state reducer",style:{maxHeight:375},mdxType:"CodeSandbox"}),Object(s.b)("h2",null,"Intermission"),Object(s.b)("p",null,"😅 Whew, let’s take a break for now. Coming in part 2: we’ll explore reducers\nthat use actions, as well as actions in combination with the current state."))}m.isMDXComponent=!0},"mc/u":function(e,a,t){"use strict";var n=t("ILUq"),s=t("iQNK"),c=t("7oih"),b=t("Al62");a.a=function(e){var a=e.children,t=Object(n.a)(e,["children"]),p=t.pageContext.frontmatter,o=p.date,r=p.title,i=Object(b.d)(o);return Object(s.c)(c.a,t,Object(s.c)("article",null,Object(s.c)("h1",{sx:{color:"font.articleH1"}},r),Object(s.c)("p",{sx:{color:"font.body.0",fontSize:"sm"}},i),a))}}}]);
//# sourceMappingURL=component---content-articles-reducer-patterns-part-1-mdx-bbe1aaf5f8fb11afe32c.js.map